
External_Interupt.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000009d4  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000007  00800060  00800060  00000a48  2**0
                  ALLOC
  2 .stab         00000c6c  00000000  00000000  00000a48  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      0000090a  00000000  00000000  000016b4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 b6 04 	jmp	0x96c	; 0x96c <__vector_1>
   8:	0c 94 7b 04 	jmp	0x8f6	; 0x8f6 <__vector_2>
   c:	0c 94 8b 04 	jmp	0x916	; 0x916 <__vector_3>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a7 36       	cpi	r26, 0x67	; 103
  6c:	b1 07       	cpc	r27, r17
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 ca 04 	call	0x994	; 0x994 <main>
  74:	0c 94 e8 04 	jmp	0x9d0	; 0x9d0 <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <DIO_set_pin_direction>:
#include "DIO_config.h"
#include "DIO_private.h"
#include "DIO_interface.h"

U8 DIO_set_pin_direction(U8 port_NB,U8 pin_NB,U8 pin_direction)
{
  7c:	df 93       	push	r29
  7e:	cf 93       	push	r28
  80:	00 d0       	rcall	.+0      	; 0x82 <DIO_set_pin_direction+0x6>
  82:	00 d0       	rcall	.+0      	; 0x84 <DIO_set_pin_direction+0x8>
  84:	00 d0       	rcall	.+0      	; 0x86 <DIO_set_pin_direction+0xa>
  86:	cd b7       	in	r28, 0x3d	; 61
  88:	de b7       	in	r29, 0x3e	; 62
  8a:	8a 83       	std	Y+2, r24	; 0x02
  8c:	6b 83       	std	Y+3, r22	; 0x03
  8e:	4c 83       	std	Y+4, r20	; 0x04
U8 error_state = 0;
  90:	19 82       	std	Y+1, r1	; 0x01
if(port_NB>= DIO_Max_port_NB)
  92:	8a 81       	ldd	r24, Y+2	; 0x02
  94:	84 30       	cpi	r24, 0x04	; 4
  96:	18 f0       	brcs	.+6      	; 0x9e <DIO_set_pin_direction+0x22>
{
	error_state = 1;
  98:	81 e0       	ldi	r24, 0x01	; 1
  9a:	89 83       	std	Y+1, r24	; 0x01
  9c:	e0 c0       	rjmp	.+448    	; 0x25e <DIO_set_pin_direction+0x1e2>
}
else if(pin_NB>=DIO_Max_pin_NB )
  9e:	8b 81       	ldd	r24, Y+3	; 0x03
  a0:	88 30       	cpi	r24, 0x08	; 8
  a2:	18 f0       	brcs	.+6      	; 0xaa <DIO_set_pin_direction+0x2e>
{
	error_state = 1;
  a4:	81 e0       	ldi	r24, 0x01	; 1
  a6:	89 83       	std	Y+1, r24	; 0x01
  a8:	da c0       	rjmp	.+436    	; 0x25e <DIO_set_pin_direction+0x1e2>
}
else if((pin_direction !=DIO_Input) && (pin_direction!=DIO_Output))
  aa:	8c 81       	ldd	r24, Y+4	; 0x04
  ac:	88 23       	and	r24, r24
  ae:	31 f0       	breq	.+12     	; 0xbc <DIO_set_pin_direction+0x40>
  b0:	8c 81       	ldd	r24, Y+4	; 0x04
  b2:	81 30       	cpi	r24, 0x01	; 1
  b4:	19 f0       	breq	.+6      	; 0xbc <DIO_set_pin_direction+0x40>
{
	error_state = 1;
  b6:	81 e0       	ldi	r24, 0x01	; 1
  b8:	89 83       	std	Y+1, r24	; 0x01
  ba:	d1 c0       	rjmp	.+418    	; 0x25e <DIO_set_pin_direction+0x1e2>
}
else{
     switch(port_NB){
  bc:	8a 81       	ldd	r24, Y+2	; 0x02
  be:	28 2f       	mov	r18, r24
  c0:	30 e0       	ldi	r19, 0x00	; 0
  c2:	3e 83       	std	Y+6, r19	; 0x06
  c4:	2d 83       	std	Y+5, r18	; 0x05
  c6:	8d 81       	ldd	r24, Y+5	; 0x05
  c8:	9e 81       	ldd	r25, Y+6	; 0x06
  ca:	81 30       	cpi	r24, 0x01	; 1
  cc:	91 05       	cpc	r25, r1
  ce:	09 f4       	brne	.+2      	; 0xd2 <DIO_set_pin_direction+0x56>
  d0:	43 c0       	rjmp	.+134    	; 0x158 <DIO_set_pin_direction+0xdc>
  d2:	2d 81       	ldd	r18, Y+5	; 0x05
  d4:	3e 81       	ldd	r19, Y+6	; 0x06
  d6:	22 30       	cpi	r18, 0x02	; 2
  d8:	31 05       	cpc	r19, r1
  da:	2c f4       	brge	.+10     	; 0xe6 <DIO_set_pin_direction+0x6a>
  dc:	8d 81       	ldd	r24, Y+5	; 0x05
  de:	9e 81       	ldd	r25, Y+6	; 0x06
  e0:	00 97       	sbiw	r24, 0x00	; 0
  e2:	71 f0       	breq	.+28     	; 0x100 <DIO_set_pin_direction+0x84>
  e4:	bc c0       	rjmp	.+376    	; 0x25e <DIO_set_pin_direction+0x1e2>
  e6:	2d 81       	ldd	r18, Y+5	; 0x05
  e8:	3e 81       	ldd	r19, Y+6	; 0x06
  ea:	22 30       	cpi	r18, 0x02	; 2
  ec:	31 05       	cpc	r19, r1
  ee:	09 f4       	brne	.+2      	; 0xf2 <DIO_set_pin_direction+0x76>
  f0:	5f c0       	rjmp	.+190    	; 0x1b0 <DIO_set_pin_direction+0x134>
  f2:	8d 81       	ldd	r24, Y+5	; 0x05
  f4:	9e 81       	ldd	r25, Y+6	; 0x06
  f6:	83 30       	cpi	r24, 0x03	; 3
  f8:	91 05       	cpc	r25, r1
  fa:	09 f4       	brne	.+2      	; 0xfe <DIO_set_pin_direction+0x82>
  fc:	85 c0       	rjmp	.+266    	; 0x208 <DIO_set_pin_direction+0x18c>
  fe:	af c0       	rjmp	.+350    	; 0x25e <DIO_set_pin_direction+0x1e2>
      case Group_A:
	   assign_bit(DIO_U8_DDRA,pin_NB,pin_direction);
 100:	8c 81       	ldd	r24, Y+4	; 0x04
 102:	81 30       	cpi	r24, 0x01	; 1
 104:	a1 f4       	brne	.+40     	; 0x12e <DIO_set_pin_direction+0xb2>
 106:	aa e3       	ldi	r26, 0x3A	; 58
 108:	b0 e0       	ldi	r27, 0x00	; 0
 10a:	ea e3       	ldi	r30, 0x3A	; 58
 10c:	f0 e0       	ldi	r31, 0x00	; 0
 10e:	80 81       	ld	r24, Z
 110:	48 2f       	mov	r20, r24
 112:	8b 81       	ldd	r24, Y+3	; 0x03
 114:	28 2f       	mov	r18, r24
 116:	30 e0       	ldi	r19, 0x00	; 0
 118:	81 e0       	ldi	r24, 0x01	; 1
 11a:	90 e0       	ldi	r25, 0x00	; 0
 11c:	02 2e       	mov	r0, r18
 11e:	02 c0       	rjmp	.+4      	; 0x124 <DIO_set_pin_direction+0xa8>
 120:	88 0f       	add	r24, r24
 122:	99 1f       	adc	r25, r25
 124:	0a 94       	dec	r0
 126:	e2 f7       	brpl	.-8      	; 0x120 <DIO_set_pin_direction+0xa4>
 128:	84 2b       	or	r24, r20
 12a:	8c 93       	st	X, r24
 12c:	98 c0       	rjmp	.+304    	; 0x25e <DIO_set_pin_direction+0x1e2>
 12e:	aa e3       	ldi	r26, 0x3A	; 58
 130:	b0 e0       	ldi	r27, 0x00	; 0
 132:	ea e3       	ldi	r30, 0x3A	; 58
 134:	f0 e0       	ldi	r31, 0x00	; 0
 136:	80 81       	ld	r24, Z
 138:	48 2f       	mov	r20, r24
 13a:	8b 81       	ldd	r24, Y+3	; 0x03
 13c:	28 2f       	mov	r18, r24
 13e:	30 e0       	ldi	r19, 0x00	; 0
 140:	81 e0       	ldi	r24, 0x01	; 1
 142:	90 e0       	ldi	r25, 0x00	; 0
 144:	02 2e       	mov	r0, r18
 146:	02 c0       	rjmp	.+4      	; 0x14c <DIO_set_pin_direction+0xd0>
 148:	88 0f       	add	r24, r24
 14a:	99 1f       	adc	r25, r25
 14c:	0a 94       	dec	r0
 14e:	e2 f7       	brpl	.-8      	; 0x148 <DIO_set_pin_direction+0xcc>
 150:	80 95       	com	r24
 152:	84 23       	and	r24, r20
 154:	8c 93       	st	X, r24
 156:	83 c0       	rjmp	.+262    	; 0x25e <DIO_set_pin_direction+0x1e2>
	   break;
	   case Group_B:
	   assign_bit(DIO_U8_DDRB,pin_NB,pin_direction);
 158:	8c 81       	ldd	r24, Y+4	; 0x04
 15a:	81 30       	cpi	r24, 0x01	; 1
 15c:	a1 f4       	brne	.+40     	; 0x186 <DIO_set_pin_direction+0x10a>
 15e:	a7 e3       	ldi	r26, 0x37	; 55
 160:	b0 e0       	ldi	r27, 0x00	; 0
 162:	e7 e3       	ldi	r30, 0x37	; 55
 164:	f0 e0       	ldi	r31, 0x00	; 0
 166:	80 81       	ld	r24, Z
 168:	48 2f       	mov	r20, r24
 16a:	8b 81       	ldd	r24, Y+3	; 0x03
 16c:	28 2f       	mov	r18, r24
 16e:	30 e0       	ldi	r19, 0x00	; 0
 170:	81 e0       	ldi	r24, 0x01	; 1
 172:	90 e0       	ldi	r25, 0x00	; 0
 174:	02 2e       	mov	r0, r18
 176:	02 c0       	rjmp	.+4      	; 0x17c <DIO_set_pin_direction+0x100>
 178:	88 0f       	add	r24, r24
 17a:	99 1f       	adc	r25, r25
 17c:	0a 94       	dec	r0
 17e:	e2 f7       	brpl	.-8      	; 0x178 <DIO_set_pin_direction+0xfc>
 180:	84 2b       	or	r24, r20
 182:	8c 93       	st	X, r24
 184:	6c c0       	rjmp	.+216    	; 0x25e <DIO_set_pin_direction+0x1e2>
 186:	a7 e3       	ldi	r26, 0x37	; 55
 188:	b0 e0       	ldi	r27, 0x00	; 0
 18a:	e7 e3       	ldi	r30, 0x37	; 55
 18c:	f0 e0       	ldi	r31, 0x00	; 0
 18e:	80 81       	ld	r24, Z
 190:	48 2f       	mov	r20, r24
 192:	8b 81       	ldd	r24, Y+3	; 0x03
 194:	28 2f       	mov	r18, r24
 196:	30 e0       	ldi	r19, 0x00	; 0
 198:	81 e0       	ldi	r24, 0x01	; 1
 19a:	90 e0       	ldi	r25, 0x00	; 0
 19c:	02 2e       	mov	r0, r18
 19e:	02 c0       	rjmp	.+4      	; 0x1a4 <DIO_set_pin_direction+0x128>
 1a0:	88 0f       	add	r24, r24
 1a2:	99 1f       	adc	r25, r25
 1a4:	0a 94       	dec	r0
 1a6:	e2 f7       	brpl	.-8      	; 0x1a0 <DIO_set_pin_direction+0x124>
 1a8:	80 95       	com	r24
 1aa:	84 23       	and	r24, r20
 1ac:	8c 93       	st	X, r24
 1ae:	57 c0       	rjmp	.+174    	; 0x25e <DIO_set_pin_direction+0x1e2>
	   break;
     case Group_C:
	   assign_bit(DIO_U8_DDRC,pin_NB,pin_direction);
 1b0:	8c 81       	ldd	r24, Y+4	; 0x04
 1b2:	81 30       	cpi	r24, 0x01	; 1
 1b4:	a1 f4       	brne	.+40     	; 0x1de <DIO_set_pin_direction+0x162>
 1b6:	a4 e3       	ldi	r26, 0x34	; 52
 1b8:	b0 e0       	ldi	r27, 0x00	; 0
 1ba:	e4 e3       	ldi	r30, 0x34	; 52
 1bc:	f0 e0       	ldi	r31, 0x00	; 0
 1be:	80 81       	ld	r24, Z
 1c0:	48 2f       	mov	r20, r24
 1c2:	8b 81       	ldd	r24, Y+3	; 0x03
 1c4:	28 2f       	mov	r18, r24
 1c6:	30 e0       	ldi	r19, 0x00	; 0
 1c8:	81 e0       	ldi	r24, 0x01	; 1
 1ca:	90 e0       	ldi	r25, 0x00	; 0
 1cc:	02 2e       	mov	r0, r18
 1ce:	02 c0       	rjmp	.+4      	; 0x1d4 <DIO_set_pin_direction+0x158>
 1d0:	88 0f       	add	r24, r24
 1d2:	99 1f       	adc	r25, r25
 1d4:	0a 94       	dec	r0
 1d6:	e2 f7       	brpl	.-8      	; 0x1d0 <DIO_set_pin_direction+0x154>
 1d8:	84 2b       	or	r24, r20
 1da:	8c 93       	st	X, r24
 1dc:	40 c0       	rjmp	.+128    	; 0x25e <DIO_set_pin_direction+0x1e2>
 1de:	a4 e3       	ldi	r26, 0x34	; 52
 1e0:	b0 e0       	ldi	r27, 0x00	; 0
 1e2:	e4 e3       	ldi	r30, 0x34	; 52
 1e4:	f0 e0       	ldi	r31, 0x00	; 0
 1e6:	80 81       	ld	r24, Z
 1e8:	48 2f       	mov	r20, r24
 1ea:	8b 81       	ldd	r24, Y+3	; 0x03
 1ec:	28 2f       	mov	r18, r24
 1ee:	30 e0       	ldi	r19, 0x00	; 0
 1f0:	81 e0       	ldi	r24, 0x01	; 1
 1f2:	90 e0       	ldi	r25, 0x00	; 0
 1f4:	02 2e       	mov	r0, r18
 1f6:	02 c0       	rjmp	.+4      	; 0x1fc <DIO_set_pin_direction+0x180>
 1f8:	88 0f       	add	r24, r24
 1fa:	99 1f       	adc	r25, r25
 1fc:	0a 94       	dec	r0
 1fe:	e2 f7       	brpl	.-8      	; 0x1f8 <DIO_set_pin_direction+0x17c>
 200:	80 95       	com	r24
 202:	84 23       	and	r24, r20
 204:	8c 93       	st	X, r24
 206:	2b c0       	rjmp	.+86     	; 0x25e <DIO_set_pin_direction+0x1e2>
	   break;
     case Group_D:
	   assign_bit(DIO_U8_DDRD,pin_NB,pin_direction);
 208:	8c 81       	ldd	r24, Y+4	; 0x04
 20a:	81 30       	cpi	r24, 0x01	; 1
 20c:	a1 f4       	brne	.+40     	; 0x236 <DIO_set_pin_direction+0x1ba>
 20e:	a1 e3       	ldi	r26, 0x31	; 49
 210:	b0 e0       	ldi	r27, 0x00	; 0
 212:	e1 e3       	ldi	r30, 0x31	; 49
 214:	f0 e0       	ldi	r31, 0x00	; 0
 216:	80 81       	ld	r24, Z
 218:	48 2f       	mov	r20, r24
 21a:	8b 81       	ldd	r24, Y+3	; 0x03
 21c:	28 2f       	mov	r18, r24
 21e:	30 e0       	ldi	r19, 0x00	; 0
 220:	81 e0       	ldi	r24, 0x01	; 1
 222:	90 e0       	ldi	r25, 0x00	; 0
 224:	02 2e       	mov	r0, r18
 226:	02 c0       	rjmp	.+4      	; 0x22c <DIO_set_pin_direction+0x1b0>
 228:	88 0f       	add	r24, r24
 22a:	99 1f       	adc	r25, r25
 22c:	0a 94       	dec	r0
 22e:	e2 f7       	brpl	.-8      	; 0x228 <DIO_set_pin_direction+0x1ac>
 230:	84 2b       	or	r24, r20
 232:	8c 93       	st	X, r24
 234:	14 c0       	rjmp	.+40     	; 0x25e <DIO_set_pin_direction+0x1e2>
 236:	a1 e3       	ldi	r26, 0x31	; 49
 238:	b0 e0       	ldi	r27, 0x00	; 0
 23a:	e1 e3       	ldi	r30, 0x31	; 49
 23c:	f0 e0       	ldi	r31, 0x00	; 0
 23e:	80 81       	ld	r24, Z
 240:	48 2f       	mov	r20, r24
 242:	8b 81       	ldd	r24, Y+3	; 0x03
 244:	28 2f       	mov	r18, r24
 246:	30 e0       	ldi	r19, 0x00	; 0
 248:	81 e0       	ldi	r24, 0x01	; 1
 24a:	90 e0       	ldi	r25, 0x00	; 0
 24c:	02 2e       	mov	r0, r18
 24e:	02 c0       	rjmp	.+4      	; 0x254 <DIO_set_pin_direction+0x1d8>
 250:	88 0f       	add	r24, r24
 252:	99 1f       	adc	r25, r25
 254:	0a 94       	dec	r0
 256:	e2 f7       	brpl	.-8      	; 0x250 <DIO_set_pin_direction+0x1d4>
 258:	80 95       	com	r24
 25a:	84 23       	and	r24, r20
 25c:	8c 93       	st	X, r24
	   break;
}
}

return error_state;
 25e:	89 81       	ldd	r24, Y+1	; 0x01
}
 260:	26 96       	adiw	r28, 0x06	; 6
 262:	0f b6       	in	r0, 0x3f	; 63
 264:	f8 94       	cli
 266:	de bf       	out	0x3e, r29	; 62
 268:	0f be       	out	0x3f, r0	; 63
 26a:	cd bf       	out	0x3d, r28	; 61
 26c:	cf 91       	pop	r28
 26e:	df 91       	pop	r29
 270:	08 95       	ret

00000272 <DIO_set_pin_value>:


U8 DIO_set_pin_value(U8 port_NB,U8 pin_NB,U8 pin_value)
{
 272:	df 93       	push	r29
 274:	cf 93       	push	r28
 276:	00 d0       	rcall	.+0      	; 0x278 <DIO_set_pin_value+0x6>
 278:	00 d0       	rcall	.+0      	; 0x27a <DIO_set_pin_value+0x8>
 27a:	00 d0       	rcall	.+0      	; 0x27c <DIO_set_pin_value+0xa>
 27c:	cd b7       	in	r28, 0x3d	; 61
 27e:	de b7       	in	r29, 0x3e	; 62
 280:	8a 83       	std	Y+2, r24	; 0x02
 282:	6b 83       	std	Y+3, r22	; 0x03
 284:	4c 83       	std	Y+4, r20	; 0x04
U8 error_state = 0;
 286:	19 82       	std	Y+1, r1	; 0x01
if(port_NB>= DIO_Max_port_NB)
 288:	8a 81       	ldd	r24, Y+2	; 0x02
 28a:	84 30       	cpi	r24, 0x04	; 4
 28c:	18 f0       	brcs	.+6      	; 0x294 <DIO_set_pin_value+0x22>
{
	error_state = 1;
 28e:	81 e0       	ldi	r24, 0x01	; 1
 290:	89 83       	std	Y+1, r24	; 0x01
 292:	e0 c0       	rjmp	.+448    	; 0x454 <DIO_set_pin_value+0x1e2>
}
else if(pin_NB>=DIO_Max_pin_NB)
 294:	8b 81       	ldd	r24, Y+3	; 0x03
 296:	88 30       	cpi	r24, 0x08	; 8
 298:	18 f0       	brcs	.+6      	; 0x2a0 <DIO_set_pin_value+0x2e>
{
	error_state = 1;
 29a:	81 e0       	ldi	r24, 0x01	; 1
 29c:	89 83       	std	Y+1, r24	; 0x01
 29e:	da c0       	rjmp	.+436    	; 0x454 <DIO_set_pin_value+0x1e2>
}
else if((pin_value!=DIO_High) && (pin_value!=DIO_Low))
 2a0:	8c 81       	ldd	r24, Y+4	; 0x04
 2a2:	81 30       	cpi	r24, 0x01	; 1
 2a4:	31 f0       	breq	.+12     	; 0x2b2 <DIO_set_pin_value+0x40>
 2a6:	8c 81       	ldd	r24, Y+4	; 0x04
 2a8:	88 23       	and	r24, r24
 2aa:	19 f0       	breq	.+6      	; 0x2b2 <DIO_set_pin_value+0x40>
{
	error_state = 1;
 2ac:	81 e0       	ldi	r24, 0x01	; 1
 2ae:	89 83       	std	Y+1, r24	; 0x01
 2b0:	d1 c0       	rjmp	.+418    	; 0x454 <DIO_set_pin_value+0x1e2>
}
else{
     switch(port_NB){
 2b2:	8a 81       	ldd	r24, Y+2	; 0x02
 2b4:	28 2f       	mov	r18, r24
 2b6:	30 e0       	ldi	r19, 0x00	; 0
 2b8:	3e 83       	std	Y+6, r19	; 0x06
 2ba:	2d 83       	std	Y+5, r18	; 0x05
 2bc:	8d 81       	ldd	r24, Y+5	; 0x05
 2be:	9e 81       	ldd	r25, Y+6	; 0x06
 2c0:	81 30       	cpi	r24, 0x01	; 1
 2c2:	91 05       	cpc	r25, r1
 2c4:	09 f4       	brne	.+2      	; 0x2c8 <DIO_set_pin_value+0x56>
 2c6:	43 c0       	rjmp	.+134    	; 0x34e <DIO_set_pin_value+0xdc>
 2c8:	2d 81       	ldd	r18, Y+5	; 0x05
 2ca:	3e 81       	ldd	r19, Y+6	; 0x06
 2cc:	22 30       	cpi	r18, 0x02	; 2
 2ce:	31 05       	cpc	r19, r1
 2d0:	2c f4       	brge	.+10     	; 0x2dc <DIO_set_pin_value+0x6a>
 2d2:	8d 81       	ldd	r24, Y+5	; 0x05
 2d4:	9e 81       	ldd	r25, Y+6	; 0x06
 2d6:	00 97       	sbiw	r24, 0x00	; 0
 2d8:	71 f0       	breq	.+28     	; 0x2f6 <DIO_set_pin_value+0x84>
 2da:	bc c0       	rjmp	.+376    	; 0x454 <DIO_set_pin_value+0x1e2>
 2dc:	2d 81       	ldd	r18, Y+5	; 0x05
 2de:	3e 81       	ldd	r19, Y+6	; 0x06
 2e0:	22 30       	cpi	r18, 0x02	; 2
 2e2:	31 05       	cpc	r19, r1
 2e4:	09 f4       	brne	.+2      	; 0x2e8 <DIO_set_pin_value+0x76>
 2e6:	5f c0       	rjmp	.+190    	; 0x3a6 <DIO_set_pin_value+0x134>
 2e8:	8d 81       	ldd	r24, Y+5	; 0x05
 2ea:	9e 81       	ldd	r25, Y+6	; 0x06
 2ec:	83 30       	cpi	r24, 0x03	; 3
 2ee:	91 05       	cpc	r25, r1
 2f0:	09 f4       	brne	.+2      	; 0x2f4 <DIO_set_pin_value+0x82>
 2f2:	85 c0       	rjmp	.+266    	; 0x3fe <DIO_set_pin_value+0x18c>
 2f4:	af c0       	rjmp	.+350    	; 0x454 <DIO_set_pin_value+0x1e2>
      case Group_A:
	   assign_bit(DIO_U8_PORTA,pin_NB,pin_value);
 2f6:	8c 81       	ldd	r24, Y+4	; 0x04
 2f8:	81 30       	cpi	r24, 0x01	; 1
 2fa:	a1 f4       	brne	.+40     	; 0x324 <DIO_set_pin_value+0xb2>
 2fc:	ab e3       	ldi	r26, 0x3B	; 59
 2fe:	b0 e0       	ldi	r27, 0x00	; 0
 300:	eb e3       	ldi	r30, 0x3B	; 59
 302:	f0 e0       	ldi	r31, 0x00	; 0
 304:	80 81       	ld	r24, Z
 306:	48 2f       	mov	r20, r24
 308:	8b 81       	ldd	r24, Y+3	; 0x03
 30a:	28 2f       	mov	r18, r24
 30c:	30 e0       	ldi	r19, 0x00	; 0
 30e:	81 e0       	ldi	r24, 0x01	; 1
 310:	90 e0       	ldi	r25, 0x00	; 0
 312:	02 2e       	mov	r0, r18
 314:	02 c0       	rjmp	.+4      	; 0x31a <DIO_set_pin_value+0xa8>
 316:	88 0f       	add	r24, r24
 318:	99 1f       	adc	r25, r25
 31a:	0a 94       	dec	r0
 31c:	e2 f7       	brpl	.-8      	; 0x316 <DIO_set_pin_value+0xa4>
 31e:	84 2b       	or	r24, r20
 320:	8c 93       	st	X, r24
 322:	98 c0       	rjmp	.+304    	; 0x454 <DIO_set_pin_value+0x1e2>
 324:	ab e3       	ldi	r26, 0x3B	; 59
 326:	b0 e0       	ldi	r27, 0x00	; 0
 328:	eb e3       	ldi	r30, 0x3B	; 59
 32a:	f0 e0       	ldi	r31, 0x00	; 0
 32c:	80 81       	ld	r24, Z
 32e:	48 2f       	mov	r20, r24
 330:	8b 81       	ldd	r24, Y+3	; 0x03
 332:	28 2f       	mov	r18, r24
 334:	30 e0       	ldi	r19, 0x00	; 0
 336:	81 e0       	ldi	r24, 0x01	; 1
 338:	90 e0       	ldi	r25, 0x00	; 0
 33a:	02 2e       	mov	r0, r18
 33c:	02 c0       	rjmp	.+4      	; 0x342 <DIO_set_pin_value+0xd0>
 33e:	88 0f       	add	r24, r24
 340:	99 1f       	adc	r25, r25
 342:	0a 94       	dec	r0
 344:	e2 f7       	brpl	.-8      	; 0x33e <DIO_set_pin_value+0xcc>
 346:	80 95       	com	r24
 348:	84 23       	and	r24, r20
 34a:	8c 93       	st	X, r24
 34c:	83 c0       	rjmp	.+262    	; 0x454 <DIO_set_pin_value+0x1e2>
	   break;
	   case Group_B:
	   assign_bit(DIO_U8_PORTB,pin_NB,pin_value);
 34e:	8c 81       	ldd	r24, Y+4	; 0x04
 350:	81 30       	cpi	r24, 0x01	; 1
 352:	a1 f4       	brne	.+40     	; 0x37c <DIO_set_pin_value+0x10a>
 354:	a8 e3       	ldi	r26, 0x38	; 56
 356:	b0 e0       	ldi	r27, 0x00	; 0
 358:	e8 e3       	ldi	r30, 0x38	; 56
 35a:	f0 e0       	ldi	r31, 0x00	; 0
 35c:	80 81       	ld	r24, Z
 35e:	48 2f       	mov	r20, r24
 360:	8b 81       	ldd	r24, Y+3	; 0x03
 362:	28 2f       	mov	r18, r24
 364:	30 e0       	ldi	r19, 0x00	; 0
 366:	81 e0       	ldi	r24, 0x01	; 1
 368:	90 e0       	ldi	r25, 0x00	; 0
 36a:	02 2e       	mov	r0, r18
 36c:	02 c0       	rjmp	.+4      	; 0x372 <DIO_set_pin_value+0x100>
 36e:	88 0f       	add	r24, r24
 370:	99 1f       	adc	r25, r25
 372:	0a 94       	dec	r0
 374:	e2 f7       	brpl	.-8      	; 0x36e <DIO_set_pin_value+0xfc>
 376:	84 2b       	or	r24, r20
 378:	8c 93       	st	X, r24
 37a:	6c c0       	rjmp	.+216    	; 0x454 <DIO_set_pin_value+0x1e2>
 37c:	a8 e3       	ldi	r26, 0x38	; 56
 37e:	b0 e0       	ldi	r27, 0x00	; 0
 380:	e8 e3       	ldi	r30, 0x38	; 56
 382:	f0 e0       	ldi	r31, 0x00	; 0
 384:	80 81       	ld	r24, Z
 386:	48 2f       	mov	r20, r24
 388:	8b 81       	ldd	r24, Y+3	; 0x03
 38a:	28 2f       	mov	r18, r24
 38c:	30 e0       	ldi	r19, 0x00	; 0
 38e:	81 e0       	ldi	r24, 0x01	; 1
 390:	90 e0       	ldi	r25, 0x00	; 0
 392:	02 2e       	mov	r0, r18
 394:	02 c0       	rjmp	.+4      	; 0x39a <DIO_set_pin_value+0x128>
 396:	88 0f       	add	r24, r24
 398:	99 1f       	adc	r25, r25
 39a:	0a 94       	dec	r0
 39c:	e2 f7       	brpl	.-8      	; 0x396 <DIO_set_pin_value+0x124>
 39e:	80 95       	com	r24
 3a0:	84 23       	and	r24, r20
 3a2:	8c 93       	st	X, r24
 3a4:	57 c0       	rjmp	.+174    	; 0x454 <DIO_set_pin_value+0x1e2>
	   break;
     case Group_C:
	   assign_bit(DIO_U8_PORTC,pin_NB,pin_value);
 3a6:	8c 81       	ldd	r24, Y+4	; 0x04
 3a8:	81 30       	cpi	r24, 0x01	; 1
 3aa:	a1 f4       	brne	.+40     	; 0x3d4 <DIO_set_pin_value+0x162>
 3ac:	a5 e3       	ldi	r26, 0x35	; 53
 3ae:	b0 e0       	ldi	r27, 0x00	; 0
 3b0:	e5 e3       	ldi	r30, 0x35	; 53
 3b2:	f0 e0       	ldi	r31, 0x00	; 0
 3b4:	80 81       	ld	r24, Z
 3b6:	48 2f       	mov	r20, r24
 3b8:	8b 81       	ldd	r24, Y+3	; 0x03
 3ba:	28 2f       	mov	r18, r24
 3bc:	30 e0       	ldi	r19, 0x00	; 0
 3be:	81 e0       	ldi	r24, 0x01	; 1
 3c0:	90 e0       	ldi	r25, 0x00	; 0
 3c2:	02 2e       	mov	r0, r18
 3c4:	02 c0       	rjmp	.+4      	; 0x3ca <DIO_set_pin_value+0x158>
 3c6:	88 0f       	add	r24, r24
 3c8:	99 1f       	adc	r25, r25
 3ca:	0a 94       	dec	r0
 3cc:	e2 f7       	brpl	.-8      	; 0x3c6 <DIO_set_pin_value+0x154>
 3ce:	84 2b       	or	r24, r20
 3d0:	8c 93       	st	X, r24
 3d2:	40 c0       	rjmp	.+128    	; 0x454 <DIO_set_pin_value+0x1e2>
 3d4:	a5 e3       	ldi	r26, 0x35	; 53
 3d6:	b0 e0       	ldi	r27, 0x00	; 0
 3d8:	e5 e3       	ldi	r30, 0x35	; 53
 3da:	f0 e0       	ldi	r31, 0x00	; 0
 3dc:	80 81       	ld	r24, Z
 3de:	48 2f       	mov	r20, r24
 3e0:	8b 81       	ldd	r24, Y+3	; 0x03
 3e2:	28 2f       	mov	r18, r24
 3e4:	30 e0       	ldi	r19, 0x00	; 0
 3e6:	81 e0       	ldi	r24, 0x01	; 1
 3e8:	90 e0       	ldi	r25, 0x00	; 0
 3ea:	02 2e       	mov	r0, r18
 3ec:	02 c0       	rjmp	.+4      	; 0x3f2 <DIO_set_pin_value+0x180>
 3ee:	88 0f       	add	r24, r24
 3f0:	99 1f       	adc	r25, r25
 3f2:	0a 94       	dec	r0
 3f4:	e2 f7       	brpl	.-8      	; 0x3ee <DIO_set_pin_value+0x17c>
 3f6:	80 95       	com	r24
 3f8:	84 23       	and	r24, r20
 3fa:	8c 93       	st	X, r24
 3fc:	2b c0       	rjmp	.+86     	; 0x454 <DIO_set_pin_value+0x1e2>
	   break;
     case Group_D:
	   assign_bit(DIO_U8_PORTD,pin_NB,pin_value);
 3fe:	8c 81       	ldd	r24, Y+4	; 0x04
 400:	81 30       	cpi	r24, 0x01	; 1
 402:	a1 f4       	brne	.+40     	; 0x42c <DIO_set_pin_value+0x1ba>
 404:	a2 e3       	ldi	r26, 0x32	; 50
 406:	b0 e0       	ldi	r27, 0x00	; 0
 408:	e2 e3       	ldi	r30, 0x32	; 50
 40a:	f0 e0       	ldi	r31, 0x00	; 0
 40c:	80 81       	ld	r24, Z
 40e:	48 2f       	mov	r20, r24
 410:	8b 81       	ldd	r24, Y+3	; 0x03
 412:	28 2f       	mov	r18, r24
 414:	30 e0       	ldi	r19, 0x00	; 0
 416:	81 e0       	ldi	r24, 0x01	; 1
 418:	90 e0       	ldi	r25, 0x00	; 0
 41a:	02 2e       	mov	r0, r18
 41c:	02 c0       	rjmp	.+4      	; 0x422 <DIO_set_pin_value+0x1b0>
 41e:	88 0f       	add	r24, r24
 420:	99 1f       	adc	r25, r25
 422:	0a 94       	dec	r0
 424:	e2 f7       	brpl	.-8      	; 0x41e <DIO_set_pin_value+0x1ac>
 426:	84 2b       	or	r24, r20
 428:	8c 93       	st	X, r24
 42a:	14 c0       	rjmp	.+40     	; 0x454 <DIO_set_pin_value+0x1e2>
 42c:	a2 e3       	ldi	r26, 0x32	; 50
 42e:	b0 e0       	ldi	r27, 0x00	; 0
 430:	e2 e3       	ldi	r30, 0x32	; 50
 432:	f0 e0       	ldi	r31, 0x00	; 0
 434:	80 81       	ld	r24, Z
 436:	48 2f       	mov	r20, r24
 438:	8b 81       	ldd	r24, Y+3	; 0x03
 43a:	28 2f       	mov	r18, r24
 43c:	30 e0       	ldi	r19, 0x00	; 0
 43e:	81 e0       	ldi	r24, 0x01	; 1
 440:	90 e0       	ldi	r25, 0x00	; 0
 442:	02 2e       	mov	r0, r18
 444:	02 c0       	rjmp	.+4      	; 0x44a <DIO_set_pin_value+0x1d8>
 446:	88 0f       	add	r24, r24
 448:	99 1f       	adc	r25, r25
 44a:	0a 94       	dec	r0
 44c:	e2 f7       	brpl	.-8      	; 0x446 <DIO_set_pin_value+0x1d4>
 44e:	80 95       	com	r24
 450:	84 23       	and	r24, r20
 452:	8c 93       	st	X, r24
	   break;
     }
}


return error_state;
 454:	89 81       	ldd	r24, Y+1	; 0x01
}
 456:	26 96       	adiw	r28, 0x06	; 6
 458:	0f b6       	in	r0, 0x3f	; 63
 45a:	f8 94       	cli
 45c:	de bf       	out	0x3e, r29	; 62
 45e:	0f be       	out	0x3f, r0	; 63
 460:	cd bf       	out	0x3d, r28	; 61
 462:	cf 91       	pop	r28
 464:	df 91       	pop	r29
 466:	08 95       	ret

00000468 <DIO_set_port_value>:


U8 DIO_set_port_value(U8 port_NB,U8 port_value)
{
 468:	df 93       	push	r29
 46a:	cf 93       	push	r28
 46c:	00 d0       	rcall	.+0      	; 0x46e <DIO_set_port_value+0x6>
 46e:	00 d0       	rcall	.+0      	; 0x470 <DIO_set_port_value+0x8>
 470:	0f 92       	push	r0
 472:	cd b7       	in	r28, 0x3d	; 61
 474:	de b7       	in	r29, 0x3e	; 62
 476:	8a 83       	std	Y+2, r24	; 0x02
 478:	6b 83       	std	Y+3, r22	; 0x03
U8 error_state = 0;
 47a:	19 82       	std	Y+1, r1	; 0x01
if(port_NB>= DIO_Max_port_NB)
 47c:	8a 81       	ldd	r24, Y+2	; 0x02
 47e:	84 30       	cpi	r24, 0x04	; 4
 480:	18 f0       	brcs	.+6      	; 0x488 <DIO_set_port_value+0x20>
{
	error_state = 1;
 482:	81 e0       	ldi	r24, 0x01	; 1
 484:	89 83       	std	Y+1, r24	; 0x01
 486:	32 c0       	rjmp	.+100    	; 0x4ec <DIO_set_port_value+0x84>
else if(port_value>DIO_Max_port_value)
{
	error_state = 1;
}
else{
     switch(port_NB){
 488:	8a 81       	ldd	r24, Y+2	; 0x02
 48a:	28 2f       	mov	r18, r24
 48c:	30 e0       	ldi	r19, 0x00	; 0
 48e:	3d 83       	std	Y+5, r19	; 0x05
 490:	2c 83       	std	Y+4, r18	; 0x04
 492:	8c 81       	ldd	r24, Y+4	; 0x04
 494:	9d 81       	ldd	r25, Y+5	; 0x05
 496:	81 30       	cpi	r24, 0x01	; 1
 498:	91 05       	cpc	r25, r1
 49a:	d1 f0       	breq	.+52     	; 0x4d0 <DIO_set_port_value+0x68>
 49c:	2c 81       	ldd	r18, Y+4	; 0x04
 49e:	3d 81       	ldd	r19, Y+5	; 0x05
 4a0:	22 30       	cpi	r18, 0x02	; 2
 4a2:	31 05       	cpc	r19, r1
 4a4:	2c f4       	brge	.+10     	; 0x4b0 <DIO_set_port_value+0x48>
 4a6:	8c 81       	ldd	r24, Y+4	; 0x04
 4a8:	9d 81       	ldd	r25, Y+5	; 0x05
 4aa:	00 97       	sbiw	r24, 0x00	; 0
 4ac:	61 f0       	breq	.+24     	; 0x4c6 <DIO_set_port_value+0x5e>
 4ae:	1e c0       	rjmp	.+60     	; 0x4ec <DIO_set_port_value+0x84>
 4b0:	2c 81       	ldd	r18, Y+4	; 0x04
 4b2:	3d 81       	ldd	r19, Y+5	; 0x05
 4b4:	22 30       	cpi	r18, 0x02	; 2
 4b6:	31 05       	cpc	r19, r1
 4b8:	81 f0       	breq	.+32     	; 0x4da <DIO_set_port_value+0x72>
 4ba:	8c 81       	ldd	r24, Y+4	; 0x04
 4bc:	9d 81       	ldd	r25, Y+5	; 0x05
 4be:	83 30       	cpi	r24, 0x03	; 3
 4c0:	91 05       	cpc	r25, r1
 4c2:	81 f0       	breq	.+32     	; 0x4e4 <DIO_set_port_value+0x7c>
 4c4:	13 c0       	rjmp	.+38     	; 0x4ec <DIO_set_port_value+0x84>
      case Group_A:
    	  DIO_U8_PORTA = port_value;
 4c6:	eb e3       	ldi	r30, 0x3B	; 59
 4c8:	f0 e0       	ldi	r31, 0x00	; 0
 4ca:	8b 81       	ldd	r24, Y+3	; 0x03
 4cc:	80 83       	st	Z, r24
 4ce:	0e c0       	rjmp	.+28     	; 0x4ec <DIO_set_port_value+0x84>
	   break;
	   case Group_B:
		   DIO_U8_PORTB = port_value;
 4d0:	e8 e3       	ldi	r30, 0x38	; 56
 4d2:	f0 e0       	ldi	r31, 0x00	; 0
 4d4:	8b 81       	ldd	r24, Y+3	; 0x03
 4d6:	80 83       	st	Z, r24
 4d8:	09 c0       	rjmp	.+18     	; 0x4ec <DIO_set_port_value+0x84>
	   break;
     case Group_C:
    	 DIO_U8_PORTC = port_value;
 4da:	e5 e3       	ldi	r30, 0x35	; 53
 4dc:	f0 e0       	ldi	r31, 0x00	; 0
 4de:	8b 81       	ldd	r24, Y+3	; 0x03
 4e0:	80 83       	st	Z, r24
 4e2:	04 c0       	rjmp	.+8      	; 0x4ec <DIO_set_port_value+0x84>
	   break;
     case Group_D:
    	 DIO_U8_PORTD = port_value;
 4e4:	e2 e3       	ldi	r30, 0x32	; 50
 4e6:	f0 e0       	ldi	r31, 0x00	; 0
 4e8:	8b 81       	ldd	r24, Y+3	; 0x03
 4ea:	80 83       	st	Z, r24
	   break;
     }
}


return error_state;
 4ec:	89 81       	ldd	r24, Y+1	; 0x01
}
 4ee:	0f 90       	pop	r0
 4f0:	0f 90       	pop	r0
 4f2:	0f 90       	pop	r0
 4f4:	0f 90       	pop	r0
 4f6:	0f 90       	pop	r0
 4f8:	cf 91       	pop	r28
 4fa:	df 91       	pop	r29
 4fc:	08 95       	ret

000004fe <DIO_set_port_direction>:


U8 DIO_set_port_direction(U8 port_NB, U8 port_direction)
{
 4fe:	df 93       	push	r29
 500:	cf 93       	push	r28
 502:	00 d0       	rcall	.+0      	; 0x504 <DIO_set_port_direction+0x6>
 504:	00 d0       	rcall	.+0      	; 0x506 <DIO_set_port_direction+0x8>
 506:	0f 92       	push	r0
 508:	cd b7       	in	r28, 0x3d	; 61
 50a:	de b7       	in	r29, 0x3e	; 62
 50c:	8a 83       	std	Y+2, r24	; 0x02
 50e:	6b 83       	std	Y+3, r22	; 0x03
U8 error_state = 0;
 510:	19 82       	std	Y+1, r1	; 0x01
if(port_NB>= DIO_Max_port_NB)
 512:	8a 81       	ldd	r24, Y+2	; 0x02
 514:	84 30       	cpi	r24, 0x04	; 4
 516:	18 f0       	brcs	.+6      	; 0x51e <DIO_set_port_direction+0x20>
{
	error_state = 1;
 518:	81 e0       	ldi	r24, 0x01	; 1
 51a:	89 83       	std	Y+1, r24	; 0x01
 51c:	32 c0       	rjmp	.+100    	; 0x582 <DIO_set_port_direction+0x84>
else if( port_direction>DIO_Max_port_direction )
{
	error_state = 1;
}
else{
     switch(port_NB){
 51e:	8a 81       	ldd	r24, Y+2	; 0x02
 520:	28 2f       	mov	r18, r24
 522:	30 e0       	ldi	r19, 0x00	; 0
 524:	3d 83       	std	Y+5, r19	; 0x05
 526:	2c 83       	std	Y+4, r18	; 0x04
 528:	8c 81       	ldd	r24, Y+4	; 0x04
 52a:	9d 81       	ldd	r25, Y+5	; 0x05
 52c:	81 30       	cpi	r24, 0x01	; 1
 52e:	91 05       	cpc	r25, r1
 530:	d1 f0       	breq	.+52     	; 0x566 <DIO_set_port_direction+0x68>
 532:	2c 81       	ldd	r18, Y+4	; 0x04
 534:	3d 81       	ldd	r19, Y+5	; 0x05
 536:	22 30       	cpi	r18, 0x02	; 2
 538:	31 05       	cpc	r19, r1
 53a:	2c f4       	brge	.+10     	; 0x546 <DIO_set_port_direction+0x48>
 53c:	8c 81       	ldd	r24, Y+4	; 0x04
 53e:	9d 81       	ldd	r25, Y+5	; 0x05
 540:	00 97       	sbiw	r24, 0x00	; 0
 542:	61 f0       	breq	.+24     	; 0x55c <DIO_set_port_direction+0x5e>
 544:	1e c0       	rjmp	.+60     	; 0x582 <DIO_set_port_direction+0x84>
 546:	2c 81       	ldd	r18, Y+4	; 0x04
 548:	3d 81       	ldd	r19, Y+5	; 0x05
 54a:	22 30       	cpi	r18, 0x02	; 2
 54c:	31 05       	cpc	r19, r1
 54e:	81 f0       	breq	.+32     	; 0x570 <DIO_set_port_direction+0x72>
 550:	8c 81       	ldd	r24, Y+4	; 0x04
 552:	9d 81       	ldd	r25, Y+5	; 0x05
 554:	83 30       	cpi	r24, 0x03	; 3
 556:	91 05       	cpc	r25, r1
 558:	81 f0       	breq	.+32     	; 0x57a <DIO_set_port_direction+0x7c>
 55a:	13 c0       	rjmp	.+38     	; 0x582 <DIO_set_port_direction+0x84>
      case Group_A:
    	  DIO_U8_DDRA = port_direction;
 55c:	ea e3       	ldi	r30, 0x3A	; 58
 55e:	f0 e0       	ldi	r31, 0x00	; 0
 560:	8b 81       	ldd	r24, Y+3	; 0x03
 562:	80 83       	st	Z, r24
 564:	0e c0       	rjmp	.+28     	; 0x582 <DIO_set_port_direction+0x84>
	   break;
	   case Group_B:
		   DIO_U8_DDRB = port_direction;
 566:	e7 e3       	ldi	r30, 0x37	; 55
 568:	f0 e0       	ldi	r31, 0x00	; 0
 56a:	8b 81       	ldd	r24, Y+3	; 0x03
 56c:	80 83       	st	Z, r24
 56e:	09 c0       	rjmp	.+18     	; 0x582 <DIO_set_port_direction+0x84>
	   break;
     case Group_C:
    	 DIO_U8_DDRC = port_direction;
 570:	e4 e3       	ldi	r30, 0x34	; 52
 572:	f0 e0       	ldi	r31, 0x00	; 0
 574:	8b 81       	ldd	r24, Y+3	; 0x03
 576:	80 83       	st	Z, r24
 578:	04 c0       	rjmp	.+8      	; 0x582 <DIO_set_port_direction+0x84>
	   break;
     case Group_D:
    	 DIO_U8_DDRD = port_direction;
 57a:	e1 e3       	ldi	r30, 0x31	; 49
 57c:	f0 e0       	ldi	r31, 0x00	; 0
 57e:	8b 81       	ldd	r24, Y+3	; 0x03
 580:	80 83       	st	Z, r24
	   break;
     }
}


return error_state;
 582:	89 81       	ldd	r24, Y+1	; 0x01
}
 584:	0f 90       	pop	r0
 586:	0f 90       	pop	r0
 588:	0f 90       	pop	r0
 58a:	0f 90       	pop	r0
 58c:	0f 90       	pop	r0
 58e:	cf 91       	pop	r28
 590:	df 91       	pop	r29
 592:	08 95       	ret

00000594 <DIO_get_pin_value>:



U8 DIO_get_pin_value(U8 port_NB,U8  pin_NB,U8 * pin_value)
{
 594:	df 93       	push	r29
 596:	cf 93       	push	r28
 598:	cd b7       	in	r28, 0x3d	; 61
 59a:	de b7       	in	r29, 0x3e	; 62
 59c:	27 97       	sbiw	r28, 0x07	; 7
 59e:	0f b6       	in	r0, 0x3f	; 63
 5a0:	f8 94       	cli
 5a2:	de bf       	out	0x3e, r29	; 62
 5a4:	0f be       	out	0x3f, r0	; 63
 5a6:	cd bf       	out	0x3d, r28	; 61
 5a8:	8a 83       	std	Y+2, r24	; 0x02
 5aa:	6b 83       	std	Y+3, r22	; 0x03
 5ac:	5d 83       	std	Y+5, r21	; 0x05
 5ae:	4c 83       	std	Y+4, r20	; 0x04
U8 error_state = 0;
 5b0:	19 82       	std	Y+1, r1	; 0x01
if(port_NB>= DIO_Max_port_NB)
 5b2:	8a 81       	ldd	r24, Y+2	; 0x02
 5b4:	84 30       	cpi	r24, 0x04	; 4
 5b6:	18 f0       	brcs	.+6      	; 0x5be <DIO_get_pin_value+0x2a>
{
	error_state = 1;
 5b8:	81 e0       	ldi	r24, 0x01	; 1
 5ba:	89 83       	std	Y+1, r24	; 0x01
 5bc:	76 c0       	rjmp	.+236    	; 0x6aa <DIO_get_pin_value+0x116>
}
else if(pin_NB>=DIO_Max_pin_NB)
 5be:	8b 81       	ldd	r24, Y+3	; 0x03
 5c0:	88 30       	cpi	r24, 0x08	; 8
 5c2:	18 f0       	brcs	.+6      	; 0x5ca <DIO_get_pin_value+0x36>
{
	error_state = 1;
 5c4:	81 e0       	ldi	r24, 0x01	; 1
 5c6:	89 83       	std	Y+1, r24	; 0x01
 5c8:	70 c0       	rjmp	.+224    	; 0x6aa <DIO_get_pin_value+0x116>
}

else{
     switch(port_NB){
 5ca:	8a 81       	ldd	r24, Y+2	; 0x02
 5cc:	28 2f       	mov	r18, r24
 5ce:	30 e0       	ldi	r19, 0x00	; 0
 5d0:	3f 83       	std	Y+7, r19	; 0x07
 5d2:	2e 83       	std	Y+6, r18	; 0x06
 5d4:	4e 81       	ldd	r20, Y+6	; 0x06
 5d6:	5f 81       	ldd	r21, Y+7	; 0x07
 5d8:	41 30       	cpi	r20, 0x01	; 1
 5da:	51 05       	cpc	r21, r1
 5dc:	59 f1       	breq	.+86     	; 0x634 <DIO_get_pin_value+0xa0>
 5de:	8e 81       	ldd	r24, Y+6	; 0x06
 5e0:	9f 81       	ldd	r25, Y+7	; 0x07
 5e2:	82 30       	cpi	r24, 0x02	; 2
 5e4:	91 05       	cpc	r25, r1
 5e6:	34 f4       	brge	.+12     	; 0x5f4 <DIO_get_pin_value+0x60>
 5e8:	2e 81       	ldd	r18, Y+6	; 0x06
 5ea:	3f 81       	ldd	r19, Y+7	; 0x07
 5ec:	21 15       	cp	r18, r1
 5ee:	31 05       	cpc	r19, r1
 5f0:	69 f0       	breq	.+26     	; 0x60c <DIO_get_pin_value+0x78>
 5f2:	5b c0       	rjmp	.+182    	; 0x6aa <DIO_get_pin_value+0x116>
 5f4:	4e 81       	ldd	r20, Y+6	; 0x06
 5f6:	5f 81       	ldd	r21, Y+7	; 0x07
 5f8:	42 30       	cpi	r20, 0x02	; 2
 5fa:	51 05       	cpc	r21, r1
 5fc:	79 f1       	breq	.+94     	; 0x65c <DIO_get_pin_value+0xc8>
 5fe:	8e 81       	ldd	r24, Y+6	; 0x06
 600:	9f 81       	ldd	r25, Y+7	; 0x07
 602:	83 30       	cpi	r24, 0x03	; 3
 604:	91 05       	cpc	r25, r1
 606:	09 f4       	brne	.+2      	; 0x60a <DIO_get_pin_value+0x76>
 608:	3d c0       	rjmp	.+122    	; 0x684 <DIO_get_pin_value+0xf0>
 60a:	4f c0       	rjmp	.+158    	; 0x6aa <DIO_get_pin_value+0x116>
      case Group_A:
    	  * pin_value = get_bit(DIO_U8_PINA,pin_NB);
 60c:	e9 e3       	ldi	r30, 0x39	; 57
 60e:	f0 e0       	ldi	r31, 0x00	; 0
 610:	80 81       	ld	r24, Z
 612:	28 2f       	mov	r18, r24
 614:	30 e0       	ldi	r19, 0x00	; 0
 616:	8b 81       	ldd	r24, Y+3	; 0x03
 618:	88 2f       	mov	r24, r24
 61a:	90 e0       	ldi	r25, 0x00	; 0
 61c:	a9 01       	movw	r20, r18
 61e:	02 c0       	rjmp	.+4      	; 0x624 <DIO_get_pin_value+0x90>
 620:	55 95       	asr	r21
 622:	47 95       	ror	r20
 624:	8a 95       	dec	r24
 626:	e2 f7       	brpl	.-8      	; 0x620 <DIO_get_pin_value+0x8c>
 628:	ca 01       	movw	r24, r20
 62a:	81 70       	andi	r24, 0x01	; 1
 62c:	ec 81       	ldd	r30, Y+4	; 0x04
 62e:	fd 81       	ldd	r31, Y+5	; 0x05
 630:	80 83       	st	Z, r24
 632:	3b c0       	rjmp	.+118    	; 0x6aa <DIO_get_pin_value+0x116>
	   break;
	   case Group_B:
		   * pin_value=get_bit(DIO_U8_PINB,pin_NB);
 634:	e6 e3       	ldi	r30, 0x36	; 54
 636:	f0 e0       	ldi	r31, 0x00	; 0
 638:	80 81       	ld	r24, Z
 63a:	28 2f       	mov	r18, r24
 63c:	30 e0       	ldi	r19, 0x00	; 0
 63e:	8b 81       	ldd	r24, Y+3	; 0x03
 640:	88 2f       	mov	r24, r24
 642:	90 e0       	ldi	r25, 0x00	; 0
 644:	a9 01       	movw	r20, r18
 646:	02 c0       	rjmp	.+4      	; 0x64c <DIO_get_pin_value+0xb8>
 648:	55 95       	asr	r21
 64a:	47 95       	ror	r20
 64c:	8a 95       	dec	r24
 64e:	e2 f7       	brpl	.-8      	; 0x648 <DIO_get_pin_value+0xb4>
 650:	ca 01       	movw	r24, r20
 652:	81 70       	andi	r24, 0x01	; 1
 654:	ec 81       	ldd	r30, Y+4	; 0x04
 656:	fd 81       	ldd	r31, Y+5	; 0x05
 658:	80 83       	st	Z, r24
 65a:	27 c0       	rjmp	.+78     	; 0x6aa <DIO_get_pin_value+0x116>
	   break;
     case Group_C:
    	 * pin_value=get_bit(DIO_U8_PINC,pin_NB);
 65c:	e3 e3       	ldi	r30, 0x33	; 51
 65e:	f0 e0       	ldi	r31, 0x00	; 0
 660:	80 81       	ld	r24, Z
 662:	28 2f       	mov	r18, r24
 664:	30 e0       	ldi	r19, 0x00	; 0
 666:	8b 81       	ldd	r24, Y+3	; 0x03
 668:	88 2f       	mov	r24, r24
 66a:	90 e0       	ldi	r25, 0x00	; 0
 66c:	a9 01       	movw	r20, r18
 66e:	02 c0       	rjmp	.+4      	; 0x674 <DIO_get_pin_value+0xe0>
 670:	55 95       	asr	r21
 672:	47 95       	ror	r20
 674:	8a 95       	dec	r24
 676:	e2 f7       	brpl	.-8      	; 0x670 <DIO_get_pin_value+0xdc>
 678:	ca 01       	movw	r24, r20
 67a:	81 70       	andi	r24, 0x01	; 1
 67c:	ec 81       	ldd	r30, Y+4	; 0x04
 67e:	fd 81       	ldd	r31, Y+5	; 0x05
 680:	80 83       	st	Z, r24
 682:	13 c0       	rjmp	.+38     	; 0x6aa <DIO_get_pin_value+0x116>
	   break;
     case Group_D:
    	 * pin_value=get_bit(DIO_U8_PIND,pin_NB);
 684:	e0 e3       	ldi	r30, 0x30	; 48
 686:	f0 e0       	ldi	r31, 0x00	; 0
 688:	80 81       	ld	r24, Z
 68a:	28 2f       	mov	r18, r24
 68c:	30 e0       	ldi	r19, 0x00	; 0
 68e:	8b 81       	ldd	r24, Y+3	; 0x03
 690:	88 2f       	mov	r24, r24
 692:	90 e0       	ldi	r25, 0x00	; 0
 694:	a9 01       	movw	r20, r18
 696:	02 c0       	rjmp	.+4      	; 0x69c <DIO_get_pin_value+0x108>
 698:	55 95       	asr	r21
 69a:	47 95       	ror	r20
 69c:	8a 95       	dec	r24
 69e:	e2 f7       	brpl	.-8      	; 0x698 <DIO_get_pin_value+0x104>
 6a0:	ca 01       	movw	r24, r20
 6a2:	81 70       	andi	r24, 0x01	; 1
 6a4:	ec 81       	ldd	r30, Y+4	; 0x04
 6a6:	fd 81       	ldd	r31, Y+5	; 0x05
 6a8:	80 83       	st	Z, r24
	   break;
     }

}
return error_state;
 6aa:	89 81       	ldd	r24, Y+1	; 0x01
}
 6ac:	27 96       	adiw	r28, 0x07	; 7
 6ae:	0f b6       	in	r0, 0x3f	; 63
 6b0:	f8 94       	cli
 6b2:	de bf       	out	0x3e, r29	; 62
 6b4:	0f be       	out	0x3f, r0	; 63
 6b6:	cd bf       	out	0x3d, r28	; 61
 6b8:	cf 91       	pop	r28
 6ba:	df 91       	pop	r29
 6bc:	08 95       	ret

000006be <IntEnable>:
#include"DIO_interface.h"
#include"EXIT_private.h"
#include"EXTI_interface.h"

void IntEnable(U8 INT_index)
{
 6be:	df 93       	push	r29
 6c0:	cf 93       	push	r28
 6c2:	00 d0       	rcall	.+0      	; 0x6c4 <IntEnable+0x6>
 6c4:	0f 92       	push	r0
 6c6:	cd b7       	in	r28, 0x3d	; 61
 6c8:	de b7       	in	r29, 0x3e	; 62
 6ca:	89 83       	std	Y+1, r24	; 0x01
	switch (INT_index)
 6cc:	89 81       	ldd	r24, Y+1	; 0x01
 6ce:	28 2f       	mov	r18, r24
 6d0:	30 e0       	ldi	r19, 0x00	; 0
 6d2:	3b 83       	std	Y+3, r19	; 0x03
 6d4:	2a 83       	std	Y+2, r18	; 0x02
 6d6:	8a 81       	ldd	r24, Y+2	; 0x02
 6d8:	9b 81       	ldd	r25, Y+3	; 0x03
 6da:	81 30       	cpi	r24, 0x01	; 1
 6dc:	91 05       	cpc	r25, r1
 6de:	89 f0       	breq	.+34     	; 0x702 <IntEnable+0x44>
 6e0:	2a 81       	ldd	r18, Y+2	; 0x02
 6e2:	3b 81       	ldd	r19, Y+3	; 0x03
 6e4:	22 30       	cpi	r18, 0x02	; 2
 6e6:	31 05       	cpc	r19, r1
 6e8:	a1 f0       	breq	.+40     	; 0x712 <IntEnable+0x54>
 6ea:	8a 81       	ldd	r24, Y+2	; 0x02
 6ec:	9b 81       	ldd	r25, Y+3	; 0x03
 6ee:	00 97       	sbiw	r24, 0x00	; 0
 6f0:	b9 f4       	brne	.+46     	; 0x720 <IntEnable+0x62>
	{
		case INT_0:
		set_bit(GICR,INT_0_E_Bit);
 6f2:	ab e5       	ldi	r26, 0x5B	; 91
 6f4:	b0 e0       	ldi	r27, 0x00	; 0
 6f6:	eb e5       	ldi	r30, 0x5B	; 91
 6f8:	f0 e0       	ldi	r31, 0x00	; 0
 6fa:	80 81       	ld	r24, Z
 6fc:	80 64       	ori	r24, 0x40	; 64
 6fe:	8c 93       	st	X, r24
 700:	0f c0       	rjmp	.+30     	; 0x720 <IntEnable+0x62>
		break;

		case INT_1:
		set_bit(GICR,INT_1_E_Bit);
 702:	ab e5       	ldi	r26, 0x5B	; 91
 704:	b0 e0       	ldi	r27, 0x00	; 0
 706:	eb e5       	ldi	r30, 0x5B	; 91
 708:	f0 e0       	ldi	r31, 0x00	; 0
 70a:	80 81       	ld	r24, Z
 70c:	80 68       	ori	r24, 0x80	; 128
 70e:	8c 93       	st	X, r24
 710:	07 c0       	rjmp	.+14     	; 0x720 <IntEnable+0x62>
		break;
		case INT_2:
		set_bit(GICR,INT_2_E_Bit);
 712:	ab e5       	ldi	r26, 0x5B	; 91
 714:	b0 e0       	ldi	r27, 0x00	; 0
 716:	eb e5       	ldi	r30, 0x5B	; 91
 718:	f0 e0       	ldi	r31, 0x00	; 0
 71a:	80 81       	ld	r24, Z
 71c:	80 62       	ori	r24, 0x20	; 32
 71e:	8c 93       	st	X, r24
		break;
	}
}
 720:	0f 90       	pop	r0
 722:	0f 90       	pop	r0
 724:	0f 90       	pop	r0
 726:	cf 91       	pop	r28
 728:	df 91       	pop	r29
 72a:	08 95       	ret

0000072c <IntDisable>:

void IntDisable(U8 INT_index)
{
 72c:	df 93       	push	r29
 72e:	cf 93       	push	r28
 730:	00 d0       	rcall	.+0      	; 0x732 <IntDisable+0x6>
 732:	0f 92       	push	r0
 734:	cd b7       	in	r28, 0x3d	; 61
 736:	de b7       	in	r29, 0x3e	; 62
 738:	89 83       	std	Y+1, r24	; 0x01
	switch (INT_index)
 73a:	89 81       	ldd	r24, Y+1	; 0x01
 73c:	28 2f       	mov	r18, r24
 73e:	30 e0       	ldi	r19, 0x00	; 0
 740:	3b 83       	std	Y+3, r19	; 0x03
 742:	2a 83       	std	Y+2, r18	; 0x02
 744:	8a 81       	ldd	r24, Y+2	; 0x02
 746:	9b 81       	ldd	r25, Y+3	; 0x03
 748:	81 30       	cpi	r24, 0x01	; 1
 74a:	91 05       	cpc	r25, r1
 74c:	89 f0       	breq	.+34     	; 0x770 <IntDisable+0x44>
 74e:	2a 81       	ldd	r18, Y+2	; 0x02
 750:	3b 81       	ldd	r19, Y+3	; 0x03
 752:	22 30       	cpi	r18, 0x02	; 2
 754:	31 05       	cpc	r19, r1
 756:	a1 f0       	breq	.+40     	; 0x780 <IntDisable+0x54>
 758:	8a 81       	ldd	r24, Y+2	; 0x02
 75a:	9b 81       	ldd	r25, Y+3	; 0x03
 75c:	00 97       	sbiw	r24, 0x00	; 0
 75e:	b9 f4       	brne	.+46     	; 0x78e <IntDisable+0x62>
	{
		case INT_0:
		clear_bit(GICR,INT_0_E_Bit);
 760:	ab e5       	ldi	r26, 0x5B	; 91
 762:	b0 e0       	ldi	r27, 0x00	; 0
 764:	eb e5       	ldi	r30, 0x5B	; 91
 766:	f0 e0       	ldi	r31, 0x00	; 0
 768:	80 81       	ld	r24, Z
 76a:	8f 7b       	andi	r24, 0xBF	; 191
 76c:	8c 93       	st	X, r24
 76e:	0f c0       	rjmp	.+30     	; 0x78e <IntDisable+0x62>
		break;

		case INT_1:
			clear_bit(GICR,INT_1_E_Bit);
 770:	ab e5       	ldi	r26, 0x5B	; 91
 772:	b0 e0       	ldi	r27, 0x00	; 0
 774:	eb e5       	ldi	r30, 0x5B	; 91
 776:	f0 e0       	ldi	r31, 0x00	; 0
 778:	80 81       	ld	r24, Z
 77a:	8f 77       	andi	r24, 0x7F	; 127
 77c:	8c 93       	st	X, r24
 77e:	07 c0       	rjmp	.+14     	; 0x78e <IntDisable+0x62>
		break;
		case INT_2:
			clear_bit(GICR,INT_2_E_Bit);
 780:	ab e5       	ldi	r26, 0x5B	; 91
 782:	b0 e0       	ldi	r27, 0x00	; 0
 784:	eb e5       	ldi	r30, 0x5B	; 91
 786:	f0 e0       	ldi	r31, 0x00	; 0
 788:	80 81       	ld	r24, Z
 78a:	8f 7d       	andi	r24, 0xDF	; 223
 78c:	8c 93       	st	X, r24
		break;
	}
}
 78e:	0f 90       	pop	r0
 790:	0f 90       	pop	r0
 792:	0f 90       	pop	r0
 794:	cf 91       	pop	r28
 796:	df 91       	pop	r29
 798:	08 95       	ret

0000079a <IntSetLevel>:

void IntSetLevel(U8 INT_index, U8 INT_level )
{
 79a:	df 93       	push	r29
 79c:	cf 93       	push	r28
 79e:	00 d0       	rcall	.+0      	; 0x7a0 <IntSetLevel+0x6>
 7a0:	00 d0       	rcall	.+0      	; 0x7a2 <IntSetLevel+0x8>
 7a2:	cd b7       	in	r28, 0x3d	; 61
 7a4:	de b7       	in	r29, 0x3e	; 62
 7a6:	89 83       	std	Y+1, r24	; 0x01
 7a8:	6a 83       	std	Y+2, r22	; 0x02
	switch (INT_index)
 7aa:	89 81       	ldd	r24, Y+1	; 0x01
 7ac:	28 2f       	mov	r18, r24
 7ae:	30 e0       	ldi	r19, 0x00	; 0
 7b0:	3c 83       	std	Y+4, r19	; 0x04
 7b2:	2b 83       	std	Y+3, r18	; 0x03
 7b4:	8b 81       	ldd	r24, Y+3	; 0x03
 7b6:	9c 81       	ldd	r25, Y+4	; 0x04
 7b8:	81 30       	cpi	r24, 0x01	; 1
 7ba:	91 05       	cpc	r25, r1
 7bc:	c9 f1       	breq	.+114    	; 0x830 <IntSetLevel+0x96>
 7be:	2b 81       	ldd	r18, Y+3	; 0x03
 7c0:	3c 81       	ldd	r19, Y+4	; 0x04
 7c2:	22 30       	cpi	r18, 0x02	; 2
 7c4:	31 05       	cpc	r19, r1
 7c6:	09 f4       	brne	.+2      	; 0x7ca <IntSetLevel+0x30>
 7c8:	61 c0       	rjmp	.+194    	; 0x88c <__stack+0x2d>
 7ca:	8b 81       	ldd	r24, Y+3	; 0x03
 7cc:	9c 81       	ldd	r25, Y+4	; 0x04
 7ce:	00 97       	sbiw	r24, 0x00	; 0
 7d0:	09 f0       	breq	.+2      	; 0x7d4 <IntSetLevel+0x3a>
 7d2:	6e c0       	rjmp	.+220    	; 0x8b0 <__stack+0x51>
	{
		case INT_0:
		assign_bit(MCUCR,0,get_bit(INT_level ,0));
 7d4:	8a 81       	ldd	r24, Y+2	; 0x02
 7d6:	88 2f       	mov	r24, r24
 7d8:	90 e0       	ldi	r25, 0x00	; 0
 7da:	81 70       	andi	r24, 0x01	; 1
 7dc:	90 70       	andi	r25, 0x00	; 0
 7de:	88 23       	and	r24, r24
 7e0:	41 f0       	breq	.+16     	; 0x7f2 <IntSetLevel+0x58>
 7e2:	a5 e5       	ldi	r26, 0x55	; 85
 7e4:	b0 e0       	ldi	r27, 0x00	; 0
 7e6:	e5 e5       	ldi	r30, 0x55	; 85
 7e8:	f0 e0       	ldi	r31, 0x00	; 0
 7ea:	80 81       	ld	r24, Z
 7ec:	81 60       	ori	r24, 0x01	; 1
 7ee:	8c 93       	st	X, r24
 7f0:	07 c0       	rjmp	.+14     	; 0x800 <IntSetLevel+0x66>
 7f2:	a5 e5       	ldi	r26, 0x55	; 85
 7f4:	b0 e0       	ldi	r27, 0x00	; 0
 7f6:	e5 e5       	ldi	r30, 0x55	; 85
 7f8:	f0 e0       	ldi	r31, 0x00	; 0
 7fa:	80 81       	ld	r24, Z
 7fc:	8e 7f       	andi	r24, 0xFE	; 254
 7fe:	8c 93       	st	X, r24
		assign_bit(MCUCR,1,get_bit(INT_level ,1));
 800:	8a 81       	ldd	r24, Y+2	; 0x02
 802:	86 95       	lsr	r24
 804:	88 2f       	mov	r24, r24
 806:	90 e0       	ldi	r25, 0x00	; 0
 808:	81 70       	andi	r24, 0x01	; 1
 80a:	90 70       	andi	r25, 0x00	; 0
 80c:	88 23       	and	r24, r24
 80e:	41 f0       	breq	.+16     	; 0x820 <IntSetLevel+0x86>
 810:	a5 e5       	ldi	r26, 0x55	; 85
 812:	b0 e0       	ldi	r27, 0x00	; 0
 814:	e5 e5       	ldi	r30, 0x55	; 85
 816:	f0 e0       	ldi	r31, 0x00	; 0
 818:	80 81       	ld	r24, Z
 81a:	82 60       	ori	r24, 0x02	; 2
 81c:	8c 93       	st	X, r24
 81e:	48 c0       	rjmp	.+144    	; 0x8b0 <__stack+0x51>
 820:	a5 e5       	ldi	r26, 0x55	; 85
 822:	b0 e0       	ldi	r27, 0x00	; 0
 824:	e5 e5       	ldi	r30, 0x55	; 85
 826:	f0 e0       	ldi	r31, 0x00	; 0
 828:	80 81       	ld	r24, Z
 82a:	8d 7f       	andi	r24, 0xFD	; 253
 82c:	8c 93       	st	X, r24
 82e:	40 c0       	rjmp	.+128    	; 0x8b0 <__stack+0x51>
		break;

		case INT_1:
			assign_bit(MCUCR,2,get_bit(INT_level ,0));
 830:	8a 81       	ldd	r24, Y+2	; 0x02
 832:	88 2f       	mov	r24, r24
 834:	90 e0       	ldi	r25, 0x00	; 0
 836:	81 70       	andi	r24, 0x01	; 1
 838:	90 70       	andi	r25, 0x00	; 0
 83a:	88 23       	and	r24, r24
 83c:	41 f0       	breq	.+16     	; 0x84e <IntSetLevel+0xb4>
 83e:	a5 e5       	ldi	r26, 0x55	; 85
 840:	b0 e0       	ldi	r27, 0x00	; 0
 842:	e5 e5       	ldi	r30, 0x55	; 85
 844:	f0 e0       	ldi	r31, 0x00	; 0
 846:	80 81       	ld	r24, Z
 848:	84 60       	ori	r24, 0x04	; 4
 84a:	8c 93       	st	X, r24
 84c:	07 c0       	rjmp	.+14     	; 0x85c <IntSetLevel+0xc2>
 84e:	a5 e5       	ldi	r26, 0x55	; 85
 850:	b0 e0       	ldi	r27, 0x00	; 0
 852:	e5 e5       	ldi	r30, 0x55	; 85
 854:	f0 e0       	ldi	r31, 0x00	; 0
 856:	80 81       	ld	r24, Z
 858:	8b 7f       	andi	r24, 0xFB	; 251
 85a:	8c 93       	st	X, r24
			assign_bit(MCUCR,3,get_bit(INT_level ,1));
 85c:	8a 81       	ldd	r24, Y+2	; 0x02
 85e:	86 95       	lsr	r24
 860:	88 2f       	mov	r24, r24
 862:	90 e0       	ldi	r25, 0x00	; 0
 864:	81 70       	andi	r24, 0x01	; 1
 866:	90 70       	andi	r25, 0x00	; 0
 868:	88 23       	and	r24, r24
 86a:	41 f0       	breq	.+16     	; 0x87c <__stack+0x1d>
 86c:	a5 e5       	ldi	r26, 0x55	; 85
 86e:	b0 e0       	ldi	r27, 0x00	; 0
 870:	e5 e5       	ldi	r30, 0x55	; 85
 872:	f0 e0       	ldi	r31, 0x00	; 0
 874:	80 81       	ld	r24, Z
 876:	88 60       	ori	r24, 0x08	; 8
 878:	8c 93       	st	X, r24
 87a:	1a c0       	rjmp	.+52     	; 0x8b0 <__stack+0x51>
 87c:	a5 e5       	ldi	r26, 0x55	; 85
 87e:	b0 e0       	ldi	r27, 0x00	; 0
 880:	e5 e5       	ldi	r30, 0x55	; 85
 882:	f0 e0       	ldi	r31, 0x00	; 0
 884:	80 81       	ld	r24, Z
 886:	87 7f       	andi	r24, 0xF7	; 247
 888:	8c 93       	st	X, r24
 88a:	12 c0       	rjmp	.+36     	; 0x8b0 <__stack+0x51>
			break;

		case INT_2:
		assign_bit(MCUCSR,6,INT_level);
 88c:	8a 81       	ldd	r24, Y+2	; 0x02
 88e:	81 30       	cpi	r24, 0x01	; 1
 890:	41 f4       	brne	.+16     	; 0x8a2 <__stack+0x43>
 892:	a4 e5       	ldi	r26, 0x54	; 84
 894:	b0 e0       	ldi	r27, 0x00	; 0
 896:	e4 e5       	ldi	r30, 0x54	; 84
 898:	f0 e0       	ldi	r31, 0x00	; 0
 89a:	80 81       	ld	r24, Z
 89c:	80 64       	ori	r24, 0x40	; 64
 89e:	8c 93       	st	X, r24
 8a0:	07 c0       	rjmp	.+14     	; 0x8b0 <__stack+0x51>
 8a2:	a4 e5       	ldi	r26, 0x54	; 84
 8a4:	b0 e0       	ldi	r27, 0x00	; 0
 8a6:	e4 e5       	ldi	r30, 0x54	; 84
 8a8:	f0 e0       	ldi	r31, 0x00	; 0
 8aa:	80 81       	ld	r24, Z
 8ac:	8f 7b       	andi	r24, 0xBF	; 191
 8ae:	8c 93       	st	X, r24
		break;
	}
}
 8b0:	0f 90       	pop	r0
 8b2:	0f 90       	pop	r0
 8b4:	0f 90       	pop	r0
 8b6:	0f 90       	pop	r0
 8b8:	cf 91       	pop	r28
 8ba:	df 91       	pop	r29
 8bc:	08 95       	ret

000008be <IntGlobal>:

void IntGlobal(U8 INT_status)
{
 8be:	df 93       	push	r29
 8c0:	cf 93       	push	r28
 8c2:	0f 92       	push	r0
 8c4:	cd b7       	in	r28, 0x3d	; 61
 8c6:	de b7       	in	r29, 0x3e	; 62
 8c8:	89 83       	std	Y+1, r24	; 0x01
	 assign_bit(SREG,7,INT_status);
 8ca:	89 81       	ldd	r24, Y+1	; 0x01
 8cc:	81 30       	cpi	r24, 0x01	; 1
 8ce:	41 f4       	brne	.+16     	; 0x8e0 <IntGlobal+0x22>
 8d0:	af e5       	ldi	r26, 0x5F	; 95
 8d2:	b0 e0       	ldi	r27, 0x00	; 0
 8d4:	ef e5       	ldi	r30, 0x5F	; 95
 8d6:	f0 e0       	ldi	r31, 0x00	; 0
 8d8:	80 81       	ld	r24, Z
 8da:	80 68       	ori	r24, 0x80	; 128
 8dc:	8c 93       	st	X, r24
 8de:	07 c0       	rjmp	.+14     	; 0x8ee <IntGlobal+0x30>
 8e0:	af e5       	ldi	r26, 0x5F	; 95
 8e2:	b0 e0       	ldi	r27, 0x00	; 0
 8e4:	ef e5       	ldi	r30, 0x5F	; 95
 8e6:	f0 e0       	ldi	r31, 0x00	; 0
 8e8:	80 81       	ld	r24, Z
 8ea:	8f 77       	andi	r24, 0x7F	; 127
 8ec:	8c 93       	st	X, r24
}
 8ee:	0f 90       	pop	r0
 8f0:	cf 91       	pop	r28
 8f2:	df 91       	pop	r29
 8f4:	08 95       	ret

000008f6 <__vector_2>:




void __vector_2(void)
{
 8f6:	1f 92       	push	r1
 8f8:	0f 92       	push	r0
 8fa:	0f b6       	in	r0, 0x3f	; 63
 8fc:	0f 92       	push	r0
 8fe:	11 24       	eor	r1, r1
 900:	df 93       	push	r29
 902:	cf 93       	push	r28
 904:	cd b7       	in	r28, 0x3d	; 61
 906:	de b7       	in	r29, 0x3e	; 62
	PVoidCallBack[1];
}
 908:	cf 91       	pop	r28
 90a:	df 91       	pop	r29
 90c:	0f 90       	pop	r0
 90e:	0f be       	out	0x3f, r0	; 63
 910:	0f 90       	pop	r0
 912:	1f 90       	pop	r1
 914:	18 95       	reti

00000916 <__vector_3>:

void __vector_3(void)
{
 916:	1f 92       	push	r1
 918:	0f 92       	push	r0
 91a:	0f b6       	in	r0, 0x3f	; 63
 91c:	0f 92       	push	r0
 91e:	11 24       	eor	r1, r1
 920:	df 93       	push	r29
 922:	cf 93       	push	r28
 924:	cd b7       	in	r28, 0x3d	; 61
 926:	de b7       	in	r29, 0x3e	; 62
	PVoidCallBack[2];
}
 928:	cf 91       	pop	r28
 92a:	df 91       	pop	r29
 92c:	0f 90       	pop	r0
 92e:	0f be       	out	0x3f, r0	; 63
 930:	0f 90       	pop	r0
 932:	1f 90       	pop	r1
 934:	18 95       	reti

00000936 <INT_Set_CallBack>:

void INT_Set_CallBack(U8 INT_Index, void (*ptr)(void))
{
 936:	df 93       	push	r29
 938:	cf 93       	push	r28
 93a:	00 d0       	rcall	.+0      	; 0x93c <INT_Set_CallBack+0x6>
 93c:	0f 92       	push	r0
 93e:	cd b7       	in	r28, 0x3d	; 61
 940:	de b7       	in	r29, 0x3e	; 62
 942:	89 83       	std	Y+1, r24	; 0x01
 944:	7b 83       	std	Y+3, r23	; 0x03
 946:	6a 83       	std	Y+2, r22	; 0x02
	PVoidCallBack[INT_Index] = ptr;
 948:	89 81       	ldd	r24, Y+1	; 0x01
 94a:	88 2f       	mov	r24, r24
 94c:	90 e0       	ldi	r25, 0x00	; 0
 94e:	88 0f       	add	r24, r24
 950:	99 1f       	adc	r25, r25
 952:	fc 01       	movw	r30, r24
 954:	ef 59       	subi	r30, 0x9F	; 159
 956:	ff 4f       	sbci	r31, 0xFF	; 255
 958:	8a 81       	ldd	r24, Y+2	; 0x02
 95a:	9b 81       	ldd	r25, Y+3	; 0x03
 95c:	91 83       	std	Z+1, r25	; 0x01
 95e:	80 83       	st	Z, r24
}
 960:	0f 90       	pop	r0
 962:	0f 90       	pop	r0
 964:	0f 90       	pop	r0
 966:	cf 91       	pop	r28
 968:	df 91       	pop	r29
 96a:	08 95       	ret

0000096c <__vector_1>:
#include "DIO_interface.h"



void __vector_1(void)
{
 96c:	df 93       	push	r29
 96e:	cf 93       	push	r28
 970:	cd b7       	in	r28, 0x3d	; 61
 972:	de b7       	in	r29, 0x3e	; 62
	static U8 var =0;

	toggle_bit(var,0);
 974:	90 91 60 00 	lds	r25, 0x0060
 978:	81 e0       	ldi	r24, 0x01	; 1
 97a:	89 27       	eor	r24, r25
 97c:	80 93 60 00 	sts	0x0060, r24

	DIO_set_pin_value(Group_A,DIO_pin_A0,var);
 980:	90 91 60 00 	lds	r25, 0x0060
 984:	80 e0       	ldi	r24, 0x00	; 0
 986:	60 e0       	ldi	r22, 0x00	; 0
 988:	49 2f       	mov	r20, r25
 98a:	0e 94 39 01 	call	0x272	; 0x272 <DIO_set_pin_value>

}
 98e:	cf 91       	pop	r28
 990:	df 91       	pop	r29
 992:	08 95       	ret

00000994 <main>:
void main(void)

{
 994:	df 93       	push	r29
 996:	cf 93       	push	r28
 998:	cd b7       	in	r28, 0x3d	; 61
 99a:	de b7       	in	r29, 0x3e	; 62

	DIO_set_pin_direction(Group_A,DIO_pin_A0,DIO_Output);
 99c:	80 e0       	ldi	r24, 0x00	; 0
 99e:	60 e0       	ldi	r22, 0x00	; 0
 9a0:	41 e0       	ldi	r20, 0x01	; 1
 9a2:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_set_pin_direction>

	DIO_set_pin_direction(Group_D,DIO_pin_D2,DIO_Input);
 9a6:	83 e0       	ldi	r24, 0x03	; 3
 9a8:	62 e0       	ldi	r22, 0x02	; 2
 9aa:	40 e0       	ldi	r20, 0x00	; 0
 9ac:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_set_pin_direction>
	DIO_set_pin_value(Group_D,DIO_pin_D2,DIO_High);
 9b0:	83 e0       	ldi	r24, 0x03	; 3
 9b2:	62 e0       	ldi	r22, 0x02	; 2
 9b4:	41 e0       	ldi	r20, 0x01	; 1
 9b6:	0e 94 39 01 	call	0x272	; 0x272 <DIO_set_pin_value>

	IntSetLevel(INT_0,INT_falling_edge);
 9ba:	80 e0       	ldi	r24, 0x00	; 0
 9bc:	62 e0       	ldi	r22, 0x02	; 2
 9be:	0e 94 cd 03 	call	0x79a	; 0x79a <IntSetLevel>

	IntEnable(INT_0);
 9c2:	80 e0       	ldi	r24, 0x00	; 0
 9c4:	0e 94 5f 03 	call	0x6be	; 0x6be <IntEnable>
	IntGlobal(INT_Global_En);
 9c8:	81 e0       	ldi	r24, 0x01	; 1
 9ca:	0e 94 5f 04 	call	0x8be	; 0x8be <IntGlobal>
 9ce:	ff cf       	rjmp	.-2      	; 0x9ce <main+0x3a>

000009d0 <_exit>:
 9d0:	f8 94       	cli

000009d2 <__stop_program>:
 9d2:	ff cf       	rjmp	.-2      	; 0x9d2 <__stop_program>
